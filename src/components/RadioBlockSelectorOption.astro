---
import BlockDebris from "@components/sprites/BlockDebris.astro";
import BreakableBlock from "@components/sprites/BreakableBlock.astro";

interface Props {
	radioId: string;
	radioName: string;
	radioValue: string;
	checked?: boolean;
	blocksColor?: string;
	bordersColor?: string;
}

const {
	radioId,
	radioName,
	radioValue,
	checked = false,
	blocksColor = "text-mario-ground&block-overworld-main",
	bordersColor = "text-mario-ground&block-overworld-main",
} = Astro.props;
---

<label for={radioId} class=`aspect-square relative w-11`>
	<input
		class="hidden peer"
		id={radioId}
		type="radio"
		name={radioName}
		value={radioValue}
		checked={checked}
	/>
	<div class="debris-container absolute w-11 h-11">
		<span
			class="debris hidden aspect-square w-4 absolute top-0 left-0 scale-x-[-1]"
		>
			<BlockDebris
				debrisColor={blocksColor}
				detailsColor={bordersColor}
			/>
		</span>
		<span
			class="debris hidden aspect-square w-4 absolute top-0 right-0 scale-x-[-1]"
		>
			<BlockDebris
				debrisColor={blocksColor}
				detailsColor={bordersColor}
			/>
		</span>
		<span
			class="debris hidden aspect-square w-4 absolute bottom-0 left-0 scale-x-[-1]"
		>
			<BlockDebris
				debrisColor={blocksColor}
				detailsColor={bordersColor}
			/>
		</span>
		<span
			class="debris hidden aspect-square w-4 absolute bottom-0 right-0 scale-x-[-1]"
		>
			<BlockDebris
				debrisColor={blocksColor}
				detailsColor={bordersColor}
			/>
		</span>
	</div>
	<BreakableBlock
		bricksColor={blocksColor}
		bordersColor={bordersColor}
		class="aboslute peer-checked:hidden"
	/>
</label>

<style>
	input[type="radio"]:checked + .debris-container {
		animation: debris 1s linear 1 forwards;
	}

	input[type="radio"]:checked + .debris-container > .debris {
		display: block;
		animation: debris-parts 700ms linear infinite;
	}

	@keyframes debris {
		/* Values depend on Label size (current w-11 = 2.75rem) */
		0% {
			width: 2.75rem;
			height: 2.75rem;
			left: 0;
		}

		20% {
			transform: translateY(-2rem);
		}

		98% {
			width: 11rem;
			height: 5.5rem;
			left: -4.125rem;
			transform: translateY(5rem);
			opacity: 1;
			visibility: visible;
		}

		99% {
			width: 11rem;
			height: 5.5rem;
			left: -4.125rem;
			transform: translateY(5rem);
			opacity: 0;
			visibility: hidden;
		}

		100% {
			opacity: 0;
			visibility: hidden;
		}
	}

	@keyframes debris-parts {
		0% {
			transform: scaleX(-1);
		}

		49% {
			transform: scaleX(-1);
		}

		50% {
			transform: scaleX(1);
		}

		100% {
			transform: scaleX(1);
		}
	}
</style>
